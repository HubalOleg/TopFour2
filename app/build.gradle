buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'me.tatarka.retrolambda'


android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.example.hubaloleg.topfour"

        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = file(name)
            output.outputFile = new File(file.parent, "TopFour-" + name + "-" + versionName + ".apk");
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    //    Sign config
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //    Support
    compile "com.android.support:appcompat-v7:${supportVersion}"
    compile "com.android.support.constraint:constraint-layout:${constraintVersion}"

    //    ButterKnife
    compile "com.jakewharton:butterknife:${butterknifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknifeVersion}"

    //    Moxy
    compile "com.arello-mobile:moxy-app-compat:${moxyVersion}"
    annotationProcessor "com.arello-mobile:moxy-compiler:${moxyVersion}"

    //    Dagger
    compile "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

    //    RxJava
    compile "io.reactivex.rxjava2:rxjava:${rx2JavaVersion}"
    compile "io.reactivex.rxjava2:rxandroid:${rx2AndroidVersion}"

    //    Retrofit 2.0
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"

    //    dbflow
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbflowVersion}"
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflowVersion}"
    //crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

}
